"use strict";
if (currentUser) {
  //Selector
  const taskInput = document.getElementById("input-task");
  const todoList = document.getElementById("todo-list");
  const btnAdd = document.getElementById("btn-add");

  // Hi·ªÉn th·ªã todoList ƒë√£ l∆∞u tr∆∞·ªõc ƒë√≥
  renderTodoList();
  ////////////////  FUNCTION   ////////////////////////
  // H√†m hi·ªÉn th·ªã c√°c Task c√≥ owner tr√πng v·ªõi username c·ªßa ng∆∞·ªùi d√πng hi·ªán t·∫°i
  function renderTodoList(todo) {
    const todoArrs = getFromStorage("todoArr");
    let html = "";
    // Render l·∫°i tr∆∞·ªùng h·ª£p khi todoArr []
    if (todoArrs && todoArrs.length == 0) {
      todoList.innerHTML = "";
    }
    // L·ªçc trong todoArr nh·ªØng task c·ªßa currentUser
    todoArrs
      .filter((todo) => todo.owner === currentUser.username)
      .forEach((todo) => {
        html += `
        <li class="${todo.isDone ? "checked" : ""}"><p>${
          todo.task
        }</p><span class="close">√ó</span></li>
      `;
        todoList.innerHTML = html;
      });
    // S·ª± ki·ªán toggle task
    toggleTask();
    deleteTask();
  }

  ////////////////  EVENT   ////////////////////////
  // Event n√∫t Add task v√†o todoList
  btnAdd.addEventListener("click", function () {
    // Ki·ªÉm tra ng∆∞·ªùi d√πng ƒë√£ nh·∫≠p nhi·ªám v·ª• c·∫ßn add ch∆∞a?
    if (taskInput.value.trim() === "") {
      alert("Please input task!");
    } else {
      const todo = new Task(taskInput.value, currentUser.username, false);
      // Th√™m task m·ªõi v√†o m·∫£ng todoArr
      todoArr.push(todo);
      // L∆∞u d·ªØ li·ªáu xu·ªëng local storage
      saveToStorage("todoArr", todoArr);
      // Hi·ªÉn th·ªã list c√°c nhi·ªám v·ª•
      renderTodoList();
      // reset d·ªØ li·ªáu nh·∫≠p
      taskInput.value = "";
    }
  });

  // Toggle Task
  function toggleTask() {
    document.querySelectorAll("#todo-list li").forEach(function (liEl) {
      liEl.addEventListener("click", function (e) {
        // Tr√°nh n√∫t delete ra
        if (e.target != liEl.children[0]) {
          // Toggle class checked
          liEl.classList.toggle("checked");
          // T√¨m task v·ª´a check v√†o
          const todo = todoArr.find(
            (todoItem) =>
              todoItem.owner === currentUser.username &&
              todoItem.task === liEl.textContent.slice(0, -1) // L·∫•y n·ªôi dung test ch·ª©a task, b·ªè d·∫•u x (k√≠ t·ª± cu·ªëi c·ªßa chu·ªói)
          );
          // Thay ƒë·ªïi thu·ªôc t√≠nh isDone
          todo.isDone = liEl.classList.contains("checked") ? true : false;
          // C·∫≠p nh·∫≠t xu·ªëng local Storage
          saveToStorage("todoArr", todoArr);
        }
      });
    });
  }
  // Delete Task
  function deleteTask() {
    document.querySelectorAll("#todo-list .close").forEach(function (closeEl) {
      closeEl.addEventListener("click", function () {
        // X√°c nh·∫≠n x√≥a task
        const isDelete = confirm("Do you want to delete task?");
        if (isDelete) {
          // T√¨m task trong todoArr
          const pTag = closeEl.previousElementSibling.innerHTML;
          const index = todoArr.findIndex((todo) => {
            console.log("closeEl", pTag);
            return todo.owner === currentUser.username && todo.task === pTag;
          });
          // Xo√° task ƒë√≥ kh·ªèi todoArr
          todoArr.splice(index, 1);
          // C·∫≠p nh·∫≠t xu·ªëng local Storage
          saveToStorage("todoArr", todoArr);
          // Hi·ªÉn th·ªã l·∫°i todoList
          renderTodoList();
        }
      });
    });
  }
} else {
  // Th√¥ng b√°o cho ng∆∞·ªùi d√πng c·∫ßn ƒëƒÉng nh·∫≠p v√†o
  alert("You need log in to the News App!üòÅ");
  // Tr·ªü v·ªÅ trang login
  window.location.href = "../index.html";
}
